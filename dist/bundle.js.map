{
  "version": 3,
  "sources": ["../js/ui.js", "../js/utils.js", "../js/app.js"],
  "sourcesContent": ["// Centralized DOM elements object\nexport const elements = {\n  methodSelector: document.createElement('select'),\n  temporalDecaySelector: document.createElement('select'),\n  analyzeBtn: document.getElementById('analyzeBtn'),\n  uploadInput: document.getElementById('csvUpload'),\n  progressIndicator: document.createElement('div'),\n  backtestResults: document.createElement('div'),\n  recommendations: document.getElementById('recommendations'),\n  energyResults: document.getElementById('energy-results') || (() => {\n    const div = document.createElement('div');\n    div.id = 'energy-results';\n    div.className = 'energy-panel';\n    document.body.appendChild(div);\n    return div;\n  })(),\n  mlResults: document.getElementById('ml-results') || (() => {\n    const div = document.createElement('div');\n    div.id = 'ml-results';\n    div.className = 'ml-panel';\n    document.body.appendChild(div);\n    return div;\n  })(),\n  // Add more as needed for your UI\n};\n\n/**\n * Initialize UI elements and dynamic DOM structure.\n * @param {object} CONFIG - App config object (for method options)\n * @param {object} state - App state object (for current method)\n */\nexport function initUIElements(CONFIG, state) {\n  // Create and add Powerball results container if not present\n  if (!elements.powerballResults) {\n    elements.powerballResults = document.getElementById('powerball-results');\n    if (!elements.powerballResults) {\n      elements.powerballResults = document.createElement('div');\n      elements.powerballResults.id = 'powerball-results';\n      elements.powerballResults.className = 'powerball-panel';\n      // Insert after recommendations if present, else at end of body\n      if (elements.recommendations?.parentNode) {\n        elements.recommendations.parentNode.insertBefore(elements.powerballResults, elements.recommendations.nextSibling);\n      } else {\n        document.body.appendChild(elements.powerballResults);\n      }\n    }\n  }\n  elements.methodSelector.id = 'method-selector';\n  CONFIG.analysisMethods.forEach(method => {\n    const option = document.createElement('option');\n    option.value = method;\n    option.textContent = method.charAt(0).toUpperCase() + method.slice(1);\n    elements.methodSelector.appendChild(option);\n  });\n  elements.methodSelector.value = state.currentMethod;\n  // ...add more UI initialization as needed...\n}\n// ui.js\n// Handles UI rendering, DOM manipulation, and user feedback for lottery-analysis-pro\n\nexport function displayMLResults(mlPrediction, container, elements) {\n  if (typeof DEBUG !== 'undefined' && DEBUG) console.log('displayMLResults called', mlPrediction, container);\n  console.log('[Debug] displayMLResults: mlPrediction =', mlPrediction);\n  console.log('[Debug] displayMLResults: container =', container);\n  // Show white balls and powerball separately\n  const whiteBalls = (mlPrediction.whiteBalls || []).map(num => num.toString().padStart(2, '0')).join(' ');\n  const powerball = mlPrediction.powerball ? mlPrediction.powerball.toString().padStart(2, '0') : '';\n  container.innerHTML = `\n    <div class=\"ml-prediction\">\n      <div class=\"confidence\">Confidence: ${(mlPrediction.confidence * 100).toFixed(1)}%</div>\n      <div class=\"ml-numbers\"><strong>White Balls:</strong> ${whiteBalls}</div>\n      <div class=\"ml-numbers\"><strong>Powerball:</strong> <span class=\"powerball-number\">${powerball}</span></div>\n      <div class=\"model-info\">Model: ${mlPrediction.model}</div>\n      ${mlPrediction.warning ? `<div class=\"warning\">${mlPrediction.warning}</div>` : ''}\n    </div>\n  `;\n  // Also show in dedicated powerball section if present\n  elements?.powerballResults && (elements.powerballResults.innerHTML = `\n    <div class=\"powerball-section\">\n      <h3>\uD83D\uDD34 Powerball Prediction</h3>\n      <div class=\"powerball-prediction\">\n        <span class=\"powerball-number\">${powerball}</span>\n      </div>\n      <div class=\"confidence\">Confidence: ${(mlPrediction.confidence * 100).toFixed(1)}%</div>\n      <div class=\"model-info\">Model: ${mlPrediction.model}</div>\n    </div>\n  `);\n}\n\nexport function displayRecommendations(recommendations, elements) {\n  if (typeof DEBUG !== 'undefined' && DEBUG) console.log('displayRecommendations called', recommendations);\n  console.log('[Debug] displayRecommendations: recommendations =', recommendations);\n  console.log('[Debug] displayRecommendations: elements.recommendations =', elements.recommendations);\n  if (!elements.recommendations) return;\n  // Show white ball recommendations\n  elements.recommendations.innerHTML = `\n    <div class=\"recommendation-section\">\n      <h3>\uD83C\uDFAF High Confidence White Balls</h3>\n      <div class=\"number-grid\">\n        ${recommendations.highConfidence.map(num => \n          `<span class=\"number high-confidence\">${num}</span>`\n        ).join(' ')}\n        ${recommendations.highConfidence.length === 0 ? \n          '<span class=\"no-data\">No strong matches found</span>' : ''}\n      </div>\n    </div>\n    <div class=\"recommendation-section\">\n      <h3>\u26A1 Energy-Based White Balls</h3>\n      <div class=\"number-grid\">\n        ${recommendations.energyBased.map(num => \n          `<span class=\"number energy-based\">${num}</span>`\n        ).join(' ')}\n      </div>\n    </div>\n    <div class=\"recommendation-section\">\n      <h3>\uD83E\uDD16 ML-Based White Balls</h3>\n      <div class=\"number-grid\">\n        ${recommendations.mlBased.map(num => \n          `<span class=\"number ml-based\">${num}</span>`\n        ).join(' ')}\n      </div>\n    </div>\n    <div class=\"recommendation-summary\">\n      <p>${recommendations.summary}</p>\n    </div>\n  `;\n  // Show Powerball recommendation in dedicated section if present\n  if (elements.powerballResults && recommendations.powerball) {\n    elements.powerballResults.innerHTML += `\n      <div class=\"powerball-recommendation-section\">\n        <h3>\uD83D\uDD34 Powerball Recommendation</h3>\n        <div class=\"powerball-recommendation\">\n          <span class=\"powerball-number\">${recommendations.powerball}</span>\n        </div>\n      </div>\n    `;\n  }\n}\n\nexport function displayBacktestResults(results, elements) {\n  if (!results.available) {\n    elements.backtestResults.innerHTML = `<p class=\"no-backtest\">${results.message}</p>`;\n    return;\n  }\n\n  const metrics = results.performanceMetrics;\n  elements.backtestResults.innerHTML = `\n    <div class=\"backtest-header\">\n      <h3>\uD83D\uDCCA Backtesting Results (${results.totalTests} tests)</h3>\n      <p>Method: ${results.method.toUpperCase()} | Draws Tested: ${results.totalDrawsTested} | Time: ${results.analysisTime || 'N/A'} seconds</p>\n    </div>\n    \n    <div class=\"metrics-grid\">\n      <div class=\"metric-card\">\n        <h4>Hit Rate</h4>\n        <div class=\"metric-value\">${(metrics.hitRate * 100).toFixed(1)}%</div>\n        <p>Percentage of tests with \u22653 correct numbers</p>\n      </div>\n      \n      <div class=\"metric-card\">\n        <h4>Precision</h4>\n        <div class=\"metric-value\">${(metrics.precision * 100).toFixed(1)}%</div>\n        <p>Accuracy of individual number predictions</p>\n      </div>\n      <div class=\"metric-card\">\n        <h4>ROI</h4>\n        <div class=\"metric-value ${metrics.roi >= 0 ? 'positive' : 'negative'}\">${metrics.roi >= 0 ? '+' : ''}${metrics.roi.toFixed(1)}%</div>\n        <p>Simulated return on investment</p>\n      </div>\n      \n      <div class=\"metric-card\">\n        <h4>Hit Distribution</h4>\n        <div class=\"hit-distribution\">\n          ${Object.entries(metrics.hitDistribution).map(([hitCount, count]) => `\n            <div class=\"hit-item\">\n              <span class=\"hit-count\">${hitCount} numbers:</span>\n              <span class=\"hit-value\">${count} hits</span>\n            </div>\n          `).join('')}\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"financial-summary\">\n      <h4>Financial Simulation</h4>\n      <p>Total Spent: $${metrics.totalSpent} | Total Won: $${metrics.totalWon}</p>\n      <p>Net: $${(metrics.totalWon - metrics.totalSpent).toFixed(2)}</p>\n    </div>\n  `;\n}\n\n/**\n * Query and initialize all main UI elements.\n * @returns {object} elements\n */\n\nexport function setAnalyzeBtnState(enabled) {\n  const btn = document.getElementById('analyzeBtn');\n  if (btn) {\n    btn.disabled = !enabled;\n    btn.classList.toggle('ready', enabled);\n  }\n}\n\nexport function showProgress(message) {\n  const indicator = document.getElementById('progress-indicator');\n  if (indicator) {\n    indicator.style.display = 'block';\n    indicator.innerHTML = `\n      <div class=\"progress-content\">\n        <div class=\"spinner\"></div>\n        <p>${message}</p>\n      </div>\n    `;\n  }\n  setAnalyzeBtnState(false);\n  showCancelButton();\n  updateProgress(message);\n}\n\nexport function updateProgress(message, percent) {\n  const progressText = document.getElementById('progress-text');\n  if (progressText) {\n    progressText.textContent = percent !== undefined ? `${message} (${percent}%)` : message;\n  }\n  const indicator = document.getElementById('progress-indicator');\n  if (indicator && message) {\n    const p = indicator.querySelector('p');\n    if (p) p.textContent = percent !== undefined ? `${message} (${percent}%)` : message;\n  }\n}\n\nexport function hideProgress() {\n  const indicator = document.getElementById('progress-indicator');\n  const cancelBtn = document.getElementById('cancel-btn');\n  const progressText = document.getElementById('progress-text');\n  const analyzeBtn = document.getElementById('analyze-btn');\n  if (indicator) indicator.style.display = 'none';\n  if (cancelBtn) cancelBtn.style.display = 'none';\n  if (progressText) progressText.textContent = '';\n  if (analyzeBtn) analyzeBtn.disabled = false;\n}\n\nexport function showCancelButton() {\n  const cancelBtn = document.getElementById('cancel-btn');\n  if (cancelBtn) cancelBtn.style.display = 'inline-block';\n}\n\nexport function hideCancelButton() {\n  const cancelBtn = document.getElementById('cancel-btn');\n  if (cancelBtn) cancelBtn.style.display = 'none';\n}\n\nexport function showError(title, error) {\n  let msg = '';\n  if (error && typeof error.message === 'string') {\n    msg = error.message;\n  } else if (typeof error === 'string') {\n    msg = error;\n  } else if (error) {\n    msg = JSON.stringify(error);\n  } else {\n    msg = 'Unknown error';\n  }\n  console.error(`${title}:`, error);\n  alert(`${title}: ${msg}`);\n}\n", "/**\n * LOTTERY ANALYSIS UTILITIES\n * Version: 2.4.2 | Updated: 2025-08-21 02:45 PM EST\n * Changes:\n * - Added temporal weighting analysis\n * - Added number pairing/grouping analysis\n * - Enhanced gap analysis with statistical expectations\n * - Maintained all existing energy calculation functions\n */\n\n// =============== ENERGY CALCULATION =============== //\n/**\n * Calculates energy signature for lottery numbers\n * @param {number[]} numbers - Array of numbers (1-69)\n * @param {Object} weights - The energy weights from CONFIG.\n * @returns {Object[]} Energy data for each number\n * @version 1.1.0 | Updated: 2024-08-21\n */\nfunction calculateEnergy(numbers, weights) {\n  const defaultWeights = {\n    prime: 0.3,\n    digitalRoot: 0.2,\n    mod5: 0.2,\n    gridPosition: 0.3\n  };\n  const effectiveWeights = weights || defaultWeights;\n  \n  return numbers.map(num => {\n    const energyComponents = {\n      isPrime: isPrime(num) ? 1 : 0,\n      digitalRoot: getDigitalRoot(num),\n      mod5: (num % 5) * 0.2,\n      gridScore: getGridPositionScore(num)\n    };\n\n    const energy = (energyComponents.isPrime * effectiveWeights.prime) +\n                   (energyComponents.digitalRoot * effectiveWeights.digitalRoot) +\n                   (energyComponents.mod5 * effectiveWeights.mod5) +\n                   (energyComponents.gridScore * effectiveWeights.gridPosition);\n\n    return {\n      number: num,\n      ...energyComponents,\n      energy: energy\n    };\n  });\n}\n\n/**\n * Displays energy calculation results in a container\n * @param {Object[]} energyData - Array of energy data objects\n * @param {HTMLElement} container - DOM element to display results in\n * @version 1.0.0 | Created: 2023-11-16\n */\nfunction displayEnergyResults(energyData, container) {\n  if (!energyData || energyData.length === 0) {\n    container.innerHTML = '<p>No energy data available</p>';\n    return;\n  }\n\n  const sorted = [...energyData].sort((a, b) => b.energy - a.energy);\n  const topNumbers = sorted.slice(0, 15);\n  \n  container.innerHTML = topNumbers.map(num => `\n    <div class=\"number-card\" data-energy=\"${num.energy.toFixed(2)}\">\n      <div class=\"number\">${num.number}</div>\n      <div class=\"energy-score\">${num.energy.toFixed(2)}</div>\n      <div class=\"energy-breakdown\">\n        Prime: ${num.isPrime ? '\u2713' : '\u2717'} | \n        Root: ${num.digitalRoot} | \n        Mod5: ${(num.mod5 / 0.2).toFixed(0)} | \n        Grid: ${num.gridScore.toFixed(1)}\n      </div>\n    </div>\n  `).join('');\n}\n\n// =============== TEMPORAL ANALYSIS =============== //\n/**\n * Applies exponential time decay to an array of draws\n * Recent draws are weighted more heavily than older ones\n * @param {Array} draws - Array of draw objects\n * @param {number} decayRate - Decay factor (e.g., 0.9 = 10% decay per draw)\n * @returns {Array} Draws with an added `weight` property\n * @version 1.0.0 | Created: 2024-08-20 07:30 PM EST\n */\nfunction applyTemporalDecay(draws, decayRate = 0.99) {\n  if (!draws.length) return [];\n  \n  const weightedDraws = draws.map((draw, index) => {\n    // Most recent draw gets weight = 1, previous gets decayRate, then decayRate^2, etc.\n    const weight = Math.pow(decayRate, draws.length - index - 1);\n    return { ...draw, weight };\n  });\n  \n  return weightedDraws;\n}\n\n// =============== NUMBER RELATIONSHIP ANALYSIS =============== //\n/**\n * Analyzes and identifies number pairs that frequently appear together\n * @param {Array} draws - Array of draw objects\n * @param {number} minFrequency - Minimum co-occurrences to consider\n * @returns {Object} Map of number pairs and their frequency count\n * @version 1.0.0 | Created: 2024-08-20 07:30 PM EST\n */\nfunction findNumberPairs(draws, minFrequency = 5) {\n  const pairCounts = {};\n  \n  draws.forEach(draw => {\n    const whiteBalls = (draw.whiteBalls || []).slice().sort((a, b) => a - b);\n    // Create all possible pairs in the draw\n    for (let i = 0; i < whiteBalls.length; i++) {\n      for (let j = i + 1; j < whiteBalls.length; j++) {\n        const pairKey = `${whiteBalls[i]}-${whiteBalls[j]}`;\n        pairCounts[pairKey] = (pairCounts[pairKey] || 0) + 1;\n      }\n    }\n  });\n  \n  // Filter and sort pairs\n  const frequentPairs = Object.entries(pairCounts)\n    .filter(([_, count]) => count >= minFrequency)\n    .sort((a, b) => b[1] - a[1])\n    .reduce((obj, [key, count]) => {\n      obj[key] = count;\n      return obj;\n    }, {});\n  \n  return frequentPairs;\n}\n\n// =============== GAP ANALYSIS =============== //\n/**\n * Calculates the expected and actual gaps for each number\n * Identifies truly overdue numbers based on statistical expectation\n * @param {Array} draws - Array of draw objects\n * @returns {Object} Gap analysis for numbers 1-69.\n * @version 1.0.0 | Created: 2024-08-20 07:30 PM EST\n */\nfunction calculateGapAnalysis(draws) {\n  const gapData = {};\n  \n  // Initialize numbers 1-69\n  for (let i = 1; i <= 69; i++) {\n    gapData[i] = {\n      number: i,\n      frequency: 0,\n      lastSeen: null,\n      gaps: [],\n      expectedGap: 0,\n      currentGap: 0,\n      isOverdue: false\n    };\n  }\n  \n  // First pass: calculate frequencies and gaps\n  draws.forEach((draw, drawIndex) => {\n    (draw.whiteBalls || []).forEach(num => {\n      if (num >= 1 && num <= 69) {\n        if (gapData[num].lastSeen !== null) {\n          const gap = drawIndex - gapData[num].lastSeen;\n          gapData[num].gaps.push(gap);\n        }\n        gapData[num].lastSeen = drawIndex;\n        gapData[num].frequency++;\n      }\n    });\n  });\n  \n  // Second pass: calculate expected gap and overdue status\n  Object.values(gapData).forEach(data => {\n    if (data.gaps.length > 0) {\n      data.expectedGap = data.gaps.reduce((sum, gap) => sum + gap, 0) / data.gaps.length;\n      data.currentGap = draws.length - data.lastSeen;\n      data.isOverdue = data.currentGap > data.expectedGap * 1.5; // 50% beyond expected\n    }\n  });\n  \n  return gapData;\n}\n\n// =============== SUPPORTING FUNCTIONS =============== //\n/** \n * Checks if a number is prime \n * @version 1.0.0 | Created: 2023-11-15\n */\nfunction isPrime(num) {\n  if (num <= 1) return false;\n  if (num <= 3) return true;\n  if (num % 2 === 0 || num % 3 === 0) return false;\n  \n  for (let i = 5; i * i <= num; i += 6) {\n    if (num % i === 0 || num % (i + 2) === 0) return false;\n  }\n  return true;\n}\n\n/** \n * Calculates digital root (recursive digit sum) \n * @version 1.0.0 | Created: 2023-11-15\n */\nfunction getDigitalRoot(num) {\n  return num - 9 * Math.floor((num - 1) / 9);\n}\n\n/** \n * Scores spatial position on a 5x14 grid \n * @version 1.0.4 | Updated: 2024-08-20 07:30 PM EST\n */\nfunction getGridPositionScore(num) {\n  const GRID = [\n    [0.3, 0.5, 0.7, 0.9, 1.0, 0.9, 0.7, 0.5, 0.3, 0.5, 0.7, 0.9, 1.0, 0.9],\n    [0.5, 0.7, 0.9, 1.0, 0.9, 0.7, 0.5, 0.7, 0.9, 1.0, 0.9, 0.7, 0.5, 0.7],\n    [0.7, 0.9, 1.0, 0.9, 0.7, 0.5, 0.3, 0.5, 0.7, 0.9, 1.0, 0.9, 0.7, 0.5],\n    [0.5, 0.7, 0.9, 1.0, 0.9, 0.7, 0.5, 0.7, 0.9, 1.0, 0.9, 0.7, 0.5, 0.7],\n    [0.3, 0.5, 0.7, 0.9, 1.0, 0.9, 0.7, 0.5, 0.3, 0.5, 0.7, 0.9, 1.0, 0.9]\n  ];\n  \n  if (num < 1 || num > 70) return 0.5;\n  const row = Math.floor((num - 1) / 14);\n  const col = (num - 1) % 14;\n  return GRID[row]?.[col] ?? 0.5;\n}\n\n// =============== EXPORTS =============== //\n// Note: If using ES6 modules, add export statements\nexport {\n  calculateEnergy, displayEnergyResults,\n  applyTemporalDecay, findNumberPairs, calculateGapAnalysis,\n  isPrime, getDigitalRoot, getGridPositionScore,\n  applyTemporalWeighting, calculateTemporalFrequency\n};\n\n// =============== TEMPORAL WEIGHTING =============== //\n/**\n * Applies exponential time decay to draws (recent draws weighted higher)\n * @param {Array} draws - Array of draw objects with date property\n * @param {number} decayRate - Decay rate (0-1), higher = faster decay\n * @returns {Array} Draws with temporal weights added\n * @version 1.0.0 | Created: 2024-08-20\n */\nfunction applyTemporalWeighting(draws, decayRate = 0.1) {\n  if (!draws.length) return draws;\n  \n  const mostRecentDate = new Date(Math.max(...draws.map(d => d.date.getTime())));\n  const maxAgeDays = (mostRecentDate - new Date(Math.min(...draws.map(d => d.date.getTime())))) / (1000 * 60 * 60 * 24);\n  \n  return draws.map(draw => {\n    const ageDays = (mostRecentDate - draw.date) / (1000 * 60 * 60 * 24);\n    const normalizedAge = ageDays / maxAgeDays;\n    const weight = Math.exp(-decayRate * normalizedAge * 10); // Exponential decay\n    return {\n      ...draw,\n      temporalWeight: weight,\n      weightedNumbers: (draw.whiteBalls || []).map(num => ({\n        number: num,\n        weight: weight\n      }))\n    };\n  });\n}\n\n/**\n * Calculates frequency with temporal weighting\n * @param {Array} weightedDraws - Draws with temporal weights\n * @returns {Array} Frequency map with temporal weighting\n */\nfunction calculateTemporalFrequency(weightedDraws) {\n  const frequency = new Array(70).fill(0);\n  weightedDraws.forEach(draw => {\n    draw.weightedNumbers.forEach(weightedNum => {\n      if (weightedNum.number >= 1 && weightedNum.number <= 69) {\n        frequency[weightedNum.number] += weightedNum.weight;\n      }\n    });\n  });\n  return frequency;\n}\n\n// Make temporal functions available globally\nif (typeof window !== 'undefined') {\n  window.applyTemporalWeighting = applyTemporalWeighting;\n  window.calculateTemporalFrequency = calculateTemporalFrequency;\n}", "// LOTTERY ANALYSIS PRO - CORE APPLICATION\n// Version: 2.4.2 | Last Updated: 2025-08-21 02:45 PM EST\n\nimport {\n    setAnalyzeBtnState,\n    showError,\n    showProgress,\n    updateProgress,\n    hideProgress,\n    elements,\n    initUIElements,\n    displayMLResults,\n    displayRecommendations,\n    displayBacktestResults\n} from './ui.js';\n\nimport { calculateEnergy, displayEnergyResults } from './utils.js';\n\n// ==================== CONFIG & STATE ==================== //\nconst CONFIG = {\n    analysisMethods: ['energy', 'ml', 'hybrid'],\n    backtestSettings: {\n        initialTrainingSize: 100,\n        testWindowSize: 50,\n    },\n    energyWeights: { // Default weights\n        prime: 0.3,\n        digitalRoot: 0.2,\n        mod5: 0.2,\n        gridPosition: 0.3\n    }\n};\n\nconst state = {\n    draws: [],\n    currentMethod: 'hybrid',\n    activeWorkers: new Map(),\n};\n\n\n// ==================== CORE ANALYSIS ==================== //\n\nasync function runAnalysis() {\n    if (state.draws.length === 0) {\n        showError('No Data', 'Please upload a CSV file with lottery data first.');\n        return;\n    }\n\n    setAnalyzeBtnState(false);\n    showProgress('Starting analysis...');\n\n    try {\n        // 1. Energy Analysis\n        updateProgress('Calculating energy signatures...');\n        // Assuming the CSV has a 'White Balls' column which is an array of numbers\n        const allNumbers = state.draws.flatMap(d => d.whiteBalls);\n        const energyData = calculateEnergy(allNumbers, CONFIG.energyWeights);\n        displayEnergyResults(energyData, elements.energyResults);\n\n        // 2. ML Prediction\n        updateProgress('Running ML predictions...');\n        // In a real app, getMLPrediction would be defined here or imported\n        // For now, we'll use a fallback prediction for demonstration\n        const mlPrediction = getFrequencyFallback(state.draws);\n        displayMLResults(mlPrediction, elements.mlResults, elements);\n\n\n        // 3. Generate and Display Recommendations\n        updateProgress('Generating recommendations...');\n        const recommendations = generateRecommendations(energyData, mlPrediction);\n        displayRecommendations(recommendations, elements);\n\n    } catch (error) {\n        showError('Analysis Failed', error);\n    } finally {\n        hideProgress();\n        setAnalyzeBtnState(true);\n    }\n}\n\nfunction generateRecommendations(energyData, mlPrediction) {\n    const topEnergy = [...energyData].sort((a, b) => b.energy - a.energy).slice(0, 5);\n    const mlNumbers = (mlPrediction.whiteBalls || []).slice(0, 5);\n\n    const energyNumbers = topEnergy.map(item => item.number);\n    const overlap = mlNumbers.filter(num => energyNumbers.includes(num));\n\n    return {\n        highConfidence: overlap,\n        energyBased: energyNumbers,\n        mlBased: mlNumbers,\n        powerball: mlPrediction.powerball,\n        summary: `Based on ${state.draws.length} historical draws`\n    };\n}\n\n// This is a fallback since the original getMLPrediction is in a worker\nfunction getFrequencyFallback(draws) {\n    const whiteFreq = new Array(70).fill(0);\n    draws.forEach(draw => {\n        if (draw.whiteBalls && Array.isArray(draw.whiteBalls)) {\n            draw.whiteBalls.forEach(n => {\n                if (n >= 1 && n <= 69) whiteFreq[n] += 1;\n            });\n        }\n    });\n    const predictedWhiteBalls = whiteFreq\n        .map((count, number) => ({ number, count }))\n        .filter(item => item.number >= 1)\n        .sort((a, b) => b.count - a.count)\n        .slice(0, 5)\n        .map(item => item.number);\n\n    return {\n        whiteBalls: predictedWhiteBalls,\n        powerball: Math.floor(Math.random() * 26) + 1, // Random powerball\n        confidence: 0.5,\n        model: 'fallback_frequency'\n    };\n}\n\n\n// ==================== EVENT LISTENERS ==================== //\n\nfunction initEventListeners() {\n    const controlPanel = document.querySelector('.control-panel');\n\n    if (controlPanel) {\n        controlPanel.addEventListener('click', (event) => {\n            if (event.target.id === 'analyzeBtn') {\n                runAnalysis();\n            }\n        });\n    } else {\n        console.error('Control panel not found for event delegation.');\n    }\n\n    elements.uploadInput.addEventListener('change', handleFileUpload);\n}\n\nasync function handleFileUpload(event) {\n    const file = event.target.files[0];\n    if (!file) {\n        setAnalyzeBtnState(false);\n        return;\n    }\n\n    showProgress('Parsing CSV file...');\n    \n    // Use PapaParse which is loaded in index.html\n    Papa.parse(file, {\n        header: true,\n        dynamicTyping: true,\n        skipEmptyLines: true,\n        complete: (results) => {\n            hideProgress();\n            if (results.errors.length) {\n                showError('CSV Parsing Error', results.errors[0].message);\n                setAnalyzeBtnState(false);\n                return;\n            }\n            // Assuming 'White Balls' column exists and is a string like \"1,2,3,4,5\"\n            state.draws = results.data.map(row => ({\n                ...row,\n                whiteBalls: typeof row['White Balls'] === 'string' \n                    ? row['White Balls'].split(',').map(Number) \n                    : (Array.isArray(row['White Balls']) ? row['White Balls'] : [])\n            }));\n            console.log(`Parsed ${state.draws.length} draws.`);\n            setAnalyzeBtnState(true);\n        },\n        error: (err) => {\n            hideProgress();\n            showError('CSV Parsing Error', err);\n            setAnalyzeBtnState(false);\n        }\n    });\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    initUIElements(CONFIG, state);\n    initEventListeners();\n});"],
  "mappings": "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",
  "names": ["CONFIG", "state", "elements"]
}
